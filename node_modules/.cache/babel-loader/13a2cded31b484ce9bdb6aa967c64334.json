{"remainingRequest":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Vue\\mbp2_front\\front-vue\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Vue\\mbp2_front\\front-vue\\src\\store\\auth.js","dependencies":[{"path":"C:\\Vue\\mbp2_front\\front-vue\\src\\store\\auth.js","mtime":1645615732393},{"path":"C:\\Vue\\mbp2_front\\front-vue\\babel.config.js","mtime":1645615312174},{"path":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646637259658},{"path":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1646637261560},{"path":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\eslint-loader\\index.js","mtime":1646637260228}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkM6XFxWdWVcXG1icDJfZnJvbnRcXGZyb250LXZ1ZVxcbm9kZV9tb2R1bGVzXFxAYmFiZWxcXHJ1bnRpbWVcXGhlbHBlcnNcXGVzbVxcYXN5bmNUb0dlbmVyYXRvci5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMub2JqZWN0LnRvLXN0cmluZy5qcyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL3dlYi5kb20tY29sbGVjdGlvbnMuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3Qua2V5cy5qcyI7CmltcG9ydCB7IC8vIGdldEF1dGhGcm9tQ29va2llLApnZXRVc2VyRnJvbUNvb2tpZSwgLy8gc2F2ZUF1dGhUb0Nvb2tpZSwKc2F2ZVVzZXJUb0Nvb2tpZSB9IGZyb20gJy4uL3V0aWxzL2Nvb2tpZXMnOwppbXBvcnQgeyBsb2dpbkFQSSwgbXlEZXRhaWxBUEksIGdldFVzZXJMaXN0QVBJIH0gZnJvbSAnLi4vYXBpL2luZGV4JzsKaW1wb3J0IHJvdXRlciBmcm9tICcuLi9yb3V0ZXInOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZXNwYWNlZDogdHJ1ZSwKICBzdGF0ZTogewogICAgaWQ6IGdldFVzZXJGcm9tQ29va2llKCkgfHwgJycsCiAgICB1c2VyOiAnJywKICAgIHVzZXJMaXN0OiBbXSwKICAgIHRvdGFsOiAnJywKICAgIHBhZ2U6IDEgLy8gdG9rZW46IGdldEF1dGhGcm9tQ29va2llKCkgfHwgJycsCgogIH0sCiAgZ2V0dGVyczogJycsCiAgbXV0YXRpb25zOiB7CiAgICB1cGRhdGVTdGF0ZTogZnVuY3Rpb24gdXBkYXRlU3RhdGUoc3RhdGUsIHBheWxvYWQpIHsKICAgICAgT2JqZWN0LmtleXMocGF5bG9hZCkuZm9yRWFjaChmdW5jdGlvbiAoa2V5KSB7CiAgICAgICAgc3RhdGVba2V5XSA9IHBheWxvYWRba2V5XTsKICAgICAgfSk7CiAgICB9CiAgfSwKICBhY3Rpb25zOiB7CiAgICBsb2dpbjogZnVuY3Rpb24gbG9naW4oX3JlZiwgcGF5bG9hZCkgewogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHZhciBjb21taXQsIGlkLCBwYXNzd29yZCwgcmVzLCBzdGF0dXMsIHVzZXI7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgICAgICB3aGlsZSAoMSkgewogICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZi5jb21taXQ7CiAgICAgICAgICAgICAgICBpZCA9IHBheWxvYWQuaWQsIHBhc3N3b3JkID0gcGF5bG9hZC5wYXNzd29yZDsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnByZXYgPSAyOwogICAgICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDU7CiAgICAgICAgICAgICAgICByZXR1cm4gbG9naW5BUEkoewogICAgICAgICAgICAgICAgICBwYXJhbXM6IHsKICAgICAgICAgICAgICAgICAgICBpZDogaWQsCiAgICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICAgICAgc3RhdHVzID0gcmVzLmRhdGEuc3RhdHVzOwogICAgICAgICAgICAgICAgdXNlciA9IHJlcy5kYXRhLmRhdGE7CgogICAgICAgICAgICAgICAgaWYgKHN0YXR1cyA9PSAyMDApIHsKICAgICAgICAgICAgICAgICAgLy8gc2F2ZUF1dGhUb0Nvb2tpZShwYXNzd29yZCk7CiAgICAgICAgICAgICAgICAgIHNhdmVVc2VyVG9Db29raWUodXNlci5pZCk7CiAgICAgICAgICAgICAgICAgIGNvbW1pdCgndXBkYXRlU3RhdGUnLCB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IHVzZXIuaWQgLy8gdG9rZW46IHBhc3N3b3JkLAoKICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgICByb3V0ZXIucHVzaCgnL0xvZ2luJyk7CiAgICAgICAgICAgICAgICAgIGFsZXJ0KCfroZzqt7jsnbjsl5Ag7Iuk7Yyo7ZWY7JiA7Iq164uI64ukLicpOwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgICAgX2NvbnRleHQucHJldiA9IDExOwogICAgICAgICAgICAgICAgX2NvbnRleHQudDAgPSBfY29udGV4dFsiY2F0Y2giXSgyKTsKICAgICAgICAgICAgICAgIGFsZXJ0KF9jb250ZXh0LnQwKTsKCiAgICAgICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMiwgMTFdXSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldFVzZXI6IGZ1bmN0aW9uIGdldFVzZXIoX3JlZjIsIHBheWxvYWQpIHsKICAgICAgcmV0dXJuIF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZTIoKSB7CiAgICAgICAgdmFyIGNvbW1pdCwgaWQsIHJlcywgdXNlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgY29tbWl0ID0gX3JlZjIuY29tbWl0OwogICAgICAgICAgICAgICAgaWQgPSBwYXlsb2FkLmlkOwogICAgICAgICAgICAgICAgY29uc29sZS5sb2coaWQpOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICAgICAgcmV0dXJuIG15RGV0YWlsQVBJKHsKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgaWQ6IGlkCiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDU6CiAgICAgICAgICAgICAgICByZXMgPSBfY29udGV4dDIuc2VudDsKICAgICAgICAgICAgICAgIHVzZXIgPSByZXMuZGF0YTsKICAgICAgICAgICAgICAgIGNvbW1pdCgndXBkYXRlU3RhdGUnLCB7CiAgICAgICAgICAgICAgICAgIHVzZXI6IHVzZXIKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDg6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDIuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTIpOwogICAgICB9KSkoKTsKICAgIH0sCiAgICBmZXRjaFVzZXJMaXN0OiBmdW5jdGlvbiBmZXRjaFVzZXJMaXN0KF9yZWYzLCBwYXlsb2FkKSB7CiAgICAgIHJldHVybiBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUzKCkgewogICAgICAgIHZhciBjb21taXQsIHBhZ2UsIHNjaFZhbCwgcmVzLCB1c2VyTGlzdCwgdG90YWw7CiAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUzJChfY29udGV4dDMpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQzLnByZXYgPSBfY29udGV4dDMubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIGNvbW1pdCA9IF9yZWYzLmNvbW1pdDsKICAgICAgICAgICAgICAgIHBhZ2UgPSBwYXlsb2FkLnBhZ2UsIHNjaFZhbCA9IHBheWxvYWQuc2NoVmFsOwogICAgICAgICAgICAgICAgX2NvbnRleHQzLm5leHQgPSA0OwogICAgICAgICAgICAgICAgcmV0dXJuIGdldFVzZXJMaXN0QVBJKHsKICAgICAgICAgICAgICAgICAgcGFyYW1zOiB7CiAgICAgICAgICAgICAgICAgICAgc2NoVmFsOiBzY2hWYWwsCiAgICAgICAgICAgICAgICAgICAgcGFnZTogcGFnZSwKICAgICAgICAgICAgICAgICAgICByb3dzOiAxMAogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICAgICAgcmVzID0gX2NvbnRleHQzLnNlbnQ7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMuZGF0YSk7CiAgICAgICAgICAgICAgICB1c2VyTGlzdCA9IHJlcy5kYXRhLmRhdGE7CiAgICAgICAgICAgICAgICB0b3RhbCA9IHJlcy5kYXRhLnRvdGFsOwogICAgICAgICAgICAgICAgY29tbWl0KCd1cGRhdGVTdGF0ZScsIHsKICAgICAgICAgICAgICAgICAgdXNlckxpc3Q6IHVzZXJMaXN0LAogICAgICAgICAgICAgICAgICB0b3RhbDogdG90YWwKICAgICAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dDMuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZTMpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["C:/Vue/mbp2_front/front-vue/src/store/auth.js"],"names":["getUserFromCookie","saveUserToCookie","loginAPI","myDetailAPI","getUserListAPI","router","namespaced","state","id","user","userList","total","page","getters","mutations","updateState","payload","Object","keys","forEach","key","actions","login","commit","password","params","res","status","data","push","alert","getUser","console","log","fetchUserList","schVal","rows"],"mappings":"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","sourcesContent":["import {\r\n  // getAuthFromCookie,\r\n  getUserFromCookie,\r\n  // saveAuthToCookie,\r\n  saveUserToCookie,\r\n} from '../utils/cookies';\r\nimport { loginAPI, myDetailAPI, getUserListAPI } from '../api/index';\r\nimport router from '../router';\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    id: getUserFromCookie() || '',\r\n    user: '',\r\n    userList: [],\r\n    total: '',\r\n    page: 1,\r\n    // token: getAuthFromCookie() || '',\r\n  },\r\n  getters: '',\r\n  mutations: {\r\n    updateState(state, payload) {\r\n      Object.keys(payload).forEach(key => {\r\n        state[key] = payload[key];\r\n      });\r\n    },\r\n  },\r\n  actions: {\r\n    async login({ commit }, payload) {\r\n      const { id, password } = payload;\r\n\r\n      try {\r\n        const res = await loginAPI({\r\n          params: {\r\n            id,\r\n            password,\r\n          },\r\n        });\r\n        const status = res.data.status;\r\n        const user = res.data.data;\r\n\r\n        if (status == 200) {\r\n          // saveAuthToCookie(password);\r\n          saveUserToCookie(user.id);\r\n\r\n          commit('updateState', {\r\n            id: user.id,\r\n            // token: password,\r\n          });\r\n        } else {\r\n          router.push('/Login');\r\n          alert('로그인에 실패하였습니다.');\r\n        }\r\n      } catch (message) {\r\n        alert(message);\r\n      }\r\n    },\r\n    async getUser({ commit }, payload) {\r\n      const { id } = payload;\r\n\r\n      console.log(id);\r\n\r\n      const res = await myDetailAPI({\r\n        params: {\r\n          id,\r\n        },\r\n      });\r\n      const user = res.data;\r\n\r\n      commit('updateState', {\r\n        user,\r\n      });\r\n    },\r\n    async fetchUserList({ commit }, payload) {\r\n      const { page, schVal } = payload;\r\n\r\n      const res = await getUserListAPI({\r\n        params: {\r\n          schVal,\r\n          page,\r\n          rows: 10,\r\n        },\r\n      });\r\n\r\n      console.log(res.data);\r\n\r\n      const userList = res.data.data;\r\n      const total = res.data.total;\r\n\r\n      commit('updateState', {\r\n        userList,\r\n        total,\r\n      });\r\n    },\r\n  },\r\n};\r\n"]}]}