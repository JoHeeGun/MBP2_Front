{"remainingRequest":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\babel-loader\\lib\\index.js!C:\\Vue\\mbp2_front\\front-vue\\node_modules\\eslint-loader\\index.js??ref--14-0!C:\\Vue\\mbp2_front\\front-vue\\src\\store\\community.js","dependencies":[{"path":"C:\\Vue\\mbp2_front\\front-vue\\src\\store\\community.js","mtime":1645615732417},{"path":"C:\\Vue\\mbp2_front\\front-vue\\babel.config.js","mtime":1645615312174},{"path":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646637259658},{"path":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\babel-loader\\lib\\index.js","mtime":1646637261560},{"path":"C:\\Vue\\mbp2_front\\front-vue\\node_modules\\eslint-loader\\index.js","mtime":1646637260228}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["C:/Vue/mbp2_front/front-vue/src/store/community.js"],"names":["getBoardListAPI","getBoardDetailAPI","getReplyListAPI","getmyBoardListAPI","namespaced","state","community","coDetail","reply","total","page","getters","mutations","updateState","payload","Object","keys","forEach","key","actions","fetchBoard","commit","schVal","schType","console","log","params","rows","res","data","alert","communityDetail","board_num","res2","fetchmyhBoard","id"],"mappings":"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","sourcesContent":["import {\r\n  getBoardListAPI,\r\n  getBoardDetailAPI,\r\n  getReplyListAPI,\r\n  getmyBoardListAPI,\r\n} from '../api/index';\r\n\r\nexport default {\r\n  namespaced: true,\r\n  state: {\r\n    community: [],\r\n    coDetail: '',\r\n    reply: '',\r\n    total: '',\r\n    page: 1,\r\n  },\r\n  getters: '',\r\n  mutations: {\r\n    updateState(state, payload) {\r\n      Object.keys(payload).forEach(key => {\r\n        state[key] = payload[key];\r\n      });\r\n    },\r\n  },\r\n  actions: {\r\n    async fetchBoard({ commit }, payload) {\r\n      const { page, schVal, schType } = payload;\r\n\r\n      console.log(page, schType, schVal);\r\n\r\n      try {\r\n        const res = await getBoardListAPI({\r\n          params: {\r\n            rows: 10,\r\n            page,\r\n            schVal,\r\n            schType,\r\n          },\r\n        });\r\n\r\n        const community = res.data.data;\r\n        const total = res.data.total;\r\n\r\n        commit('updateState', {\r\n          community,\r\n          total,\r\n          page,\r\n        });\r\n      } catch (message) {\r\n        alert(message);\r\n      }\r\n    },\r\n    async communityDetail({ commit }, payload) {\r\n      const { board_num } = payload;\r\n\r\n      try {\r\n        const res = await getBoardDetailAPI({\r\n          params: {\r\n            board_num,\r\n          },\r\n        });\r\n\r\n        const res2 = await getReplyListAPI({\r\n          params: {\r\n            board_num,\r\n          },\r\n        });\r\n        const coDetail = res.data;\r\n        const reply = res2.data.data;\r\n\r\n        commit('updateState', {\r\n          coDetail,\r\n          reply,\r\n        });\r\n      } catch (message) {\r\n        alert(message);\r\n      }\r\n    },\r\n    // async fetchmyhBoard({ commit }, payload) {\r\n    //   const { page, schVal } = payload;\r\n\r\n    //   console.log(page, schVal);\r\n\r\n    //   try {\r\n    //     const res = await getmyBoardListAPI({\r\n    //       params: {\r\n    //         rows: 10,\r\n    //         page,\r\n    //         schVal,\r\n    //       },\r\n    //     });\r\n\r\n    //     const community = res.data.data;\r\n    //     const total = res.data.total;\r\n\r\n    //     commit('updateState', {\r\n    //       community,\r\n    //       total,\r\n    //       page,\r\n    //     });\r\n    //   } catch (message) {\r\n    //     alert(message);\r\n    //   }\r\n    // },\r\n    async fetchmyhBoard({ commit }, payload) {\r\n      const { page, schVal, id } = payload;\r\n\r\n      console.log(page, schVal, id);\r\n\r\n      try {\r\n        const res = await getmyBoardListAPI({\r\n          params: {\r\n            rows: 10,\r\n            page,\r\n            schVal,\r\n            id,\r\n          },\r\n        });\r\n        console.log(res);\r\n\r\n        const community = res.data.data;\r\n        const total = res.data.total;\r\n\r\n        commit('updateState', {\r\n          community,\r\n          total,\r\n          page,\r\n        });\r\n      } catch (message) {\r\n        alert(message);\r\n      }\r\n    },\r\n  },\r\n};\r\n"]}]}